@use "utilities" as *;

.header {
  & {
    position: fixed;
    top: 0;
    width: 100%;
    transition: translate 550ms ease;

    // overflow: hidden;
    z-index: 999;
  }
  &.is-hidden {
    translate: 0 -100%;
  }
  // .header__container
  &__container {
    display: grid;
    align-items: center;
    color: $text-heading-color;
    background-color: $dark-color;
    anchor-name: --header-anchor;

    @include adaptiveValue("column-gap", 32, 16, $bp-desktop, $bp-tablet);

    @include max-desktop {
      grid-template-areas:
        "logo burger"
        "menu menu";
    }
    @include desktop {
      grid-template-areas: "logo nav cta";
      grid-template-columns: auto 1fr auto;
    }

    &.container {
      padding-block: toRem(24);
    }
  }
  // .header__logo
  &__logo {
    grid-area: logo;
  }
  // .header__burger-btn
  &__burger-btn {
    @include max-desktop {
      grid-area: burger;
      display: block;
      position: relative;
      justify-self: end;
      width: toRem(24);
      height: toRem(24);
      color: $text-heading-color;
      transition: color 250ms;

      span,
      &::before,
      &::after {
        content: "";
        position: absolute;
        right: 0;
        width: 100%;
        height: toRem(3);
        background-color: currentColor;
        border-radius: 0.625rem;
        transition-duration: 250ms;
        transition-property: transform, width;
        pointer-events: none;
      }
      &::before {
        top: toRem(5);
      }
      &::after {
        bottom: toRem(4);
      }
      span {
        top: calc(50% - toRem(1));
      }
      :has(.menu.is-visible) & {
        span {
          width: 0;
        }
        &::before {
          top: calc(50% - toRem(1));
          transform: rotate(-45deg);
        }
        &::after {
          bottom: calc(50% - toRem(2));
          transform: rotate(45deg);
        }
      }

      @include hover() {
        color: $accent-color;
      }
    }
    @include desktop {
      display: none;
    }
  }
}
