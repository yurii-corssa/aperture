@use "./utilities/variables" as *;
@use "./utilities/functions" as *;
@use "./utilities/placeholders" as *;
@use "./utilities/mixins" as *;

.header {
  @include adaptiveValue("column-gap", 32, 16, $bp-desktop, $bp-tablet);

  & {
    position: sticky;
    top: 0;
    width: 100%;
    display: grid;
    align-items: center;
    padding-block: toRem(24);
    color: $text-heading-color;
    background-color: $background-header-color;
    transition: translate 550ms ease;
    overflow: hidden;
    z-index: 3;
  }
  &.is-hidden {
    translate: 0 -100%;
  }

  @include max-desktop {
    grid-template-areas:
      "logo burger"
      "menu menu";
  }

  @include desktop {
    grid-template-areas: "logo nav cta";
    grid-template-columns: auto 1fr auto;
  }
  // .header__logo
  &__logo {
    grid-area: logo;
  }
  // .header__menu
  &__menu {
    @include max-desktop {
      @include adaptiveValue("padding-inline", $container-padding-l, 15);

      grid-area: menu;
      position: fixed;
      top: var(--header-height);
      display: flex;
      flex-direction: column;
      gap: 1rem;
      justify-content: center;
      align-items: start;
      background-color: $background-header-color;
      overflow: hidden;
      transition: 550ms ease;
      transition-property: visibility, translate, max-height, padding-bottom;

      &:not(.is-open) {
        visibility: hidden;
      }

      &.dropdown {
        left: 0;
        right: 0;
        max-height: 0;
        padding-bottom: 0;

        &.is-open {
          max-height: toRem(300);
          padding-bottom: 2rem;
        }
      }

      &.slide {
        bottom: 0;
        width: max-content;

        &.left {
          right: 100%;

          &.is-open {
            translate: 100%;
          }
        }
        &.right {
          left: 100%;

          &.is-open {
            translate: -100%;
          }
        }
      }

      & > * {
        opacity: 0;
        filter: blur(toRem(4));
        transition:
          opacity 550ms ease,
          filter 550ms ease,
          padding-inline 450ms 250ms ease,
          background-color 250ms ease;
      }

      &.is-open > * {
        opacity: 1;
        filter: blur(0);
      }
    }

    @include desktop {
      display: contents;
    }
  }
  // .header__nav
  &__nav {
    padding-inline: 0;

    @include desktop {
      grid-area: nav;
      display: flex;
    }
  }
  // .header__menu.is-open .header__nav
  &__menu.is-open &__nav {
    padding-inline: 1rem;
  }
  // .header__list
  &__list {
    @include desktop {
      display: flex;
      justify-content: end;
      gap: toRem(32);
      width: 100%;
    }
  }
  // .header__item
  &__item {
    display: flex;
    flex-shrink: 0;
  }
  // .header__link
  &__link {
    align-self: center;
    color: $text-heading-color;

    @include hover(color, $accent-color);

    @include max-desktop {
      font-size: 1.44rem;
      line-height: 1.30435;
      padding: toRem(8) 0;
    }

    @include desktop {
      font-size: 0.94rem;
      line-height: 1.33333;
      padding: toRem(4) 0;
    }
  }
  // .header__button
  &__button {
    @extend %cta-btn;

    @include max-desktop {
      flex-shrink: 0;
    }

    @include desktop {
      grid-area: cta;
      justify-self: end;
    }
  }
  // .header__burger-btn
  &__burger-btn {
    @include max-desktop {
      grid-area: burger;
      display: block;
      position: relative;
      justify-self: end;
      width: toRem(24);
      height: toRem(24);
      color: $text-heading-color;

      span,
      &::before,
      &::after {
        content: "";
        position: absolute;
        right: 0;
        width: 100%;
        height: toRem(3);
        background-color: currentColor;
        border-radius: 0.625rem;
        transition-duration: 250ms;
        transition-property: transform, width;
        pointer-events: none;
      }
      &::before {
        top: toRem(5);
      }
      &::after {
        bottom: toRem(4);
      }
      span {
        top: calc(50% - toRem(1));
      }
      :has(.header__menu.is-open) & {
        span {
          width: 0;
        }
        &::before {
          top: calc(50% - toRem(1));
          transform: rotate(-45deg);
        }
        &::after {
          bottom: calc(50% - toRem(2));
          transform: rotate(45deg);
        }
      }
      @include hover(color, $accent-color);
    }
    @include desktop {
      display: none;
    }
  }
}
